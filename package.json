{
  "name": "typescript-imports-sort",
  "displayName": "Typescript Imports Sort",
  "description": "Sorts import statements in Typescript code",
  "version": "1.17.0",
  "publisher": "nsoult",
  "license": "MIT",
  "icon": "images/icon.png",
  "bugs": {
    "url": "https://github.com/neilsoult/typescript-imports-sort/issues"
  },
  "homepage": "https://github.com/neilsoult/typescript-imports-sort/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/neilsoult/typescript-imports-sort.git"
  },
  "engines": {
    "vscode": "^1.97.0",
    "node": "20.18.0"
  },
  "categories": [
    "Formatters"
  ],
  "galleryBanner": {
    "color": "#f0efe7",
    "theme": "light"
  },
  "keywords": [
    "Typescript",
    "imports",
    "sort",
    "import statements",
    "import clauses"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "extension.typescriptImportsSort",
        "title": "Sort imports"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Sort imports configuration",
      "properties": {
        "typescript.extension.sortImports.bracketWhitespace": {
          "type": "boolean",
          "description": "Whether or not to include whitespace between brackets of single line imports.",
          "default": true
        },
        "typescript.extension.sortImports.enableJavascript": {
          "type": "boolean",
          "description": "Whether to attempt to sort ES6-style imports in Javascript",
          "default": false
        },
        "typescript.extension.sortImports.forceTrailingCommas": {
          "type": "string",
          "enum": [
            "never",
            "always",
            "singleLineOnly",
            "multiLineOnly"
          ],
          "description": "Sets rules for adding trailing commas to lists of named imports.",
          "default": "never"
        },
        "typescript.extension.sortImports.maxLineLength": {
          "type": "number",
          "description": "The maximum line length for single line named import statements. Can override maxNamedImportsInSingleLine.",
          "default": 0
        },
        "typescript.extension.sortImports.maxNamedImportsInSingleLine": {
          "type": "number",
          "description": "The maximum number of named imports to include in a single line",
          "default": 0
        },
        "typescript.extension.sortImports.multilineIndention": {
          "type": "string",
          "enum": [
            "none",
            "namesOnly",
            "namesAndPath"
          ],
          "default": "namesOnly",
          "description": "Defines the indention on multiline import blocks"
        },
        "typescript.extension.sortImports.omitSemicolon": {
          "type": "boolean",
          "description": "Whether to omit the semicolon at the end of the line",
          "default": false
        },
        "typescript.extension.sortImports.pathSortOrder": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "package",
              "relativeUpLevel",
              "relativeDownLevel"
            ]
          },
          "uniqueItems": true,
          "minItems": 3,
          "maxItems": 3,
          "description": "When `sortMethod` is set to `path`, this controls the order to sort imports between package-level and path-relative imports. 'relativeUpLevel' describes relative paths that begin with '../', while ;relativeDownLevel' describes relative paths that begin with './'",
          "default": [
            "relativeDownLevel",
            "relativeUpLevel",
            "package"
          ]
        },
        "typescript.extension.sortImports.pathSortOrderOverride": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "When sorting imports, this controls which packages should be excluded from the system, and instead moved to the top of the import list in order, packages should be expressed by path",
          "default": []
        },
        "typescript.extension.sortImports.quoteStyle": {
          "type": "string",
          "description": "The type of quote to use for the file or package paths",
          "enum": [
            "single",
            "double"
          ],
          "default": "single"
        },
        "typescript.extension.sortImports.sortMethod": {
          "type": "string",
          "enum": [
            "fileName",
            "path",
            "importName"
          ],
          "description": "Whether to sort by the name of the import, the source path, or the file name of the import",
          "default": "importName"
        },
        "typescript.extension.sortImports.sortOnSave": {
          "type": "boolean",
          "description": "Whether to sort all imports whenever saving a Typescript file",
          "default": false
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == typescript && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == typescriptreact && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        }
      ],
      "editor/title/context": [
        {
          "when": "resourceLangId == typescript && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == typescriptreact && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        }
      ]
    },
    "keybindings": [
      {
        "when": "resourceLangId == typescript && editorTextFocus && !inDebugMode",
        "command": "extension.typescriptImportsSort",
        "key": "f10"
      },
      {
        "when": "resourceLangId == typescriptreact && editorTextFocus && !inDebugMode",
        "command": "extension.typescriptImportsSort",
        "key": "f10"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "pnpm compile",
    "compile": "tsc -p ./",
    "lint": "pnpm prettier-write .",
    "watch": "tsc -watch -p ./",
    "package": "vsce package --no-yarn",
    "prepare": "husky",
    "prettier-write": "prettier --write --ignore-unknown"
  },
  "devDependencies": {
    "@types/node": "18.19.10",
    "@types/vscode": "^1.97.0",
    "glob": "^7.1.7",
    "husky": "9.0.11",
    "lint-staged": "15.2.7",
    "prettier": "3.3.3",
    "prettier-plugin-sort-json": "^4.1.1",
    "tslint": "^5.11.0",
    "typescript": "5.7.3",
    "vsce": "^2.11.0",
    "vscode-test": "^1.3.0"
  },
  "packageManager": "pnpm@10.4.1"
}
